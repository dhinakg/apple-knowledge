# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `jekyll-optional-front-matter` gem.
# Please instead update this file by running `bin/tapioca gem jekyll-optional-front-matter`.

# source://jekyll-optional-front-matter-0.3.2/lib/jekyll-optional-front-matter/generator.rb:3
module JekyllOptionalFrontMatter; end

# Case-insensitive array of filenames to exclude. All files must first
# match the config-defined list of markdown extensions. If you'd like one
# of these files included in your site, simply add YAML front matter to it.
#
# source://jekyll-optional-front-matter-0.3.2/lib/jekyll-optional-front-matter.rb:10
JekyllOptionalFrontMatter::FILENAME_BLACKLIST = T.let(T.unsafe(nil), Array)

# source://jekyll-optional-front-matter-0.3.2/lib/jekyll-optional-front-matter/generator.rb:4
class JekyllOptionalFrontMatter::Generator < ::Jekyll::Generator
  # @return [Generator] a new instance of Generator
  #
  # source://jekyll-optional-front-matter-0.3.2/lib/jekyll-optional-front-matter/generator.rb:14
  def initialize(site); end

  # source://jekyll-optional-front-matter-0.3.2/lib/jekyll-optional-front-matter/generator.rb:18
  def generate(site); end

  # Returns the value of attribute site.
  #
  # source://jekyll-optional-front-matter-0.3.2/lib/jekyll-optional-front-matter/generator.rb:5
  def site; end

  # Sets the attribute site
  #
  # @param value the value to set the attribute site to.
  #
  # source://jekyll-optional-front-matter-0.3.2/lib/jekyll-optional-front-matter/generator.rb:5
  def site=(_arg0); end

  private

  # Does the given Jekyll::Page match our filename blacklist?
  #
  # @return [Boolean]
  #
  # source://jekyll-optional-front-matter-0.3.2/lib/jekyll-optional-front-matter/generator.rb:57
  def blacklisted?(page); end

  # @return [Boolean]
  #
  # source://jekyll-optional-front-matter-0.3.2/lib/jekyll-optional-front-matter/generator.rb:85
  def cleanup?; end

  # @return [Boolean]
  #
  # source://jekyll-optional-front-matter-0.3.2/lib/jekyll-optional-front-matter/generator.rb:81
  def disabled?; end

  # source://jekyll-optional-front-matter-0.3.2/lib/jekyll-optional-front-matter/generator.rb:73
  def entry_filter; end

  # source://jekyll-optional-front-matter-0.3.2/lib/jekyll-optional-front-matter/generator.rb:69
  def markdown_converter; end

  # An array of Jekyll::StaticFile's with a site-defined markdown extension
  #
  # source://jekyll-optional-front-matter-0.3.2/lib/jekyll-optional-front-matter/generator.rb:44
  def markdown_files; end

  # source://jekyll-optional-front-matter-0.3.2/lib/jekyll-optional-front-matter/generator.rb:77
  def option(key); end

  # Given a Jekyll::StaticFile, returns the file as a Jekyll::Page
  #
  # source://jekyll-optional-front-matter-0.3.2/lib/jekyll-optional-front-matter/generator.rb:49
  def page_from_static_file(static_file); end

  # An array of potential Jekyll::Pages to add, *including* blacklisted files
  #
  # source://jekyll-optional-front-matter-0.3.2/lib/jekyll-optional-front-matter/generator.rb:39
  def pages; end

  # An array of Jekyll::Pages to add, *excluding* blacklisted files
  #
  # source://jekyll-optional-front-matter-0.3.2/lib/jekyll-optional-front-matter/generator.rb:29
  def pages_to_add; end

  # An array of Jekyll::StaticFile's, *excluding* blacklisted files
  #
  # source://jekyll-optional-front-matter-0.3.2/lib/jekyll-optional-front-matter/generator.rb:34
  def static_files_to_remove; end

  # @return [Boolean]
  #
  # source://jekyll-optional-front-matter-0.3.2/lib/jekyll-optional-front-matter/generator.rb:63
  def whitelisted?(page); end

  class << self
    # source://jekyll-4.2.2/lib/jekyll/plugin.rb:24
    def inherited(const_); end
  end
end

# source://jekyll-optional-front-matter-0.3.2/lib/jekyll-optional-front-matter/generator.rb:12
JekyllOptionalFrontMatter::Generator::CLEANUP_KEY = T.let(T.unsafe(nil), String)

# source://jekyll-optional-front-matter-0.3.2/lib/jekyll-optional-front-matter/generator.rb:10
JekyllOptionalFrontMatter::Generator::CONFIG_KEY = T.let(T.unsafe(nil), String)

# source://jekyll-optional-front-matter-0.3.2/lib/jekyll-optional-front-matter/generator.rb:11
JekyllOptionalFrontMatter::Generator::ENABLED_KEY = T.let(T.unsafe(nil), String)
