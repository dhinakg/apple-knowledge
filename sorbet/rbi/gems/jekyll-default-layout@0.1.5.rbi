# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `jekyll-default-layout` gem.
# Please instead update this file by running `bin/tapioca gem jekyll-default-layout`.

# source://jekyll-default-layout-0.1.5/lib/jekyll-default-layout/generator.rb:3
module JekyllDefaultLayout; end

# Injects front matter defaults to set default layouts, if they exist
#
# source://jekyll-default-layout-0.1.5/lib/jekyll-default-layout/generator.rb:5
class JekyllDefaultLayout::Generator < ::Jekyll::Generator
  # @return [Generator] a new instance of Generator
  #
  # source://jekyll-default-layout-0.1.5/lib/jekyll-default-layout/generator.rb:11
  def initialize(site); end

  # source://jekyll-default-layout-0.1.5/lib/jekyll-default-layout/generator.rb:58
  def documents; end

  # source://jekyll-default-layout-0.1.5/lib/jekyll-default-layout/generator.rb:15
  def generate(site); end

  # @return [Boolean]
  #
  # source://jekyll-default-layout-0.1.5/lib/jekyll-default-layout/generator.rb:74
  def index?(document); end

  # Does the given layout exist for the site?
  #
  # @return [Boolean]
  #
  # source://jekyll-default-layout-0.1.5/lib/jekyll-default-layout/generator.rb:29
  def layout_exists?(layout); end

  # What layout is appropriate for this document, if any
  #
  # source://jekyll-default-layout-0.1.5/lib/jekyll-default-layout/generator.rb:45
  def layout_for(document); end

  # Has the user already specified a default for this layout?
  # Note: We must use `to_liquid`, and not data, to ensure front matter defaults
  #
  # @return [Boolean]
  #
  # source://jekyll-default-layout-0.1.5/lib/jekyll-default-layout/generator.rb:35
  def layout_specified?(document); end

  # @return [Boolean]
  #
  # source://jekyll-default-layout-0.1.5/lib/jekyll-default-layout/generator.rb:39
  def markdown?(document); end

  # source://jekyll-default-layout-0.1.5/lib/jekyll-default-layout/generator.rb:62
  def markdown_converter; end

  # @return [Boolean]
  #
  # source://jekyll-default-layout-0.1.5/lib/jekyll-default-layout/generator.rb:70
  def page?(document); end

  # @return [Boolean]
  #
  # source://jekyll-default-layout-0.1.5/lib/jekyll-default-layout/generator.rb:66
  def post?(document); end

  # @return [Boolean]
  #
  # source://jekyll-default-layout-0.1.5/lib/jekyll-default-layout/generator.rb:24
  def should_set_layout?(document); end

  # Returns the value of attribute site.
  #
  # source://jekyll-default-layout-0.1.5/lib/jekyll-default-layout/generator.rb:6
  def site; end

  # Sets the attribute site
  #
  # @param value the value to set the attribute site to.
  #
  # source://jekyll-default-layout-0.1.5/lib/jekyll-default-layout/generator.rb:6
  def site=(_arg0); end

  class << self
    # source://jekyll-4.2.2/lib/jekyll/plugin.rb:24
    def inherited(const_); end
  end
end
