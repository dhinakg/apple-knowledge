# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `jekyll-github-metadata` gem.
# Please instead update this file by running `bin/tapioca gem jekyll-github-metadata`.

# Public: Methods that generate a URL for a resource such as a Post or a Page.
#
# Examples
#
#   URL.new({
#     :template => /:categories/:title.html",
#     :placeholders => {:categories => "ruby", :title => "something"}
#   }).to_s
#
# source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata.rb:15
module Jekyll
  class << self
    # Public: Generate a Jekyll configuration Hash by merging the default
    # options with anything in _config.yml, and adding the given options on top.
    #
    # override - A Hash of config directives that override any options in both
    #            the defaults and the config file.
    #            See Jekyll::Configuration::DEFAULTS for a
    #            list of option names and their defaults.
    #
    # Returns the final configuration Hash.
    #
    # source://jekyll-4.2.2/lib/jekyll.rb:114
    def configuration(override = T.unsafe(nil)); end

    # Public: Tells you which Jekyll environment you are building in so you can skip tasks
    # if you need to.  This is useful when doing expensive compression tasks on css and
    # images and allows you to skip that when working in development.
    #
    # source://jekyll-4.2.2/lib/jekyll.rb:101
    def env; end

    # Public: Fetch the logger instance for this Jekyll process.
    #
    # Returns the LogAdapter instance.
    #
    # source://jekyll-4.2.2/lib/jekyll.rb:145
    def logger; end

    # Public: Set the log writer.
    #         New log writer must respond to the same methods
    #         as Ruby's interal Logger.
    #
    # writer - the new Logger-compatible log transport
    #
    # Returns the new logger.
    #
    # source://jekyll-4.2.2/lib/jekyll.rb:156
    def logger=(writer); end

    # Public: Ensures the questionable path is prefixed with the base directory
    #         and prepends the questionable path with the base directory if false.
    #
    # base_directory - the directory with which to prefix the questionable path
    # questionable_path - the path we're unsure about, and want prefixed
    #
    # Returns the sanitized path.
    #
    # source://jekyll-4.2.2/lib/jekyll.rb:174
    def sanitized_path(base_directory, questionable_path); end

    # Public: Set the TZ environment variable to use the timezone specified
    #
    # timezone - the IANA Time Zone
    #
    # Returns nothing
    #
    # source://jekyll-4.2.2/lib/jekyll.rb:133
    def set_timezone(timezone); end

    # Public: An array of sites
    #
    # Returns the Jekyll sites created.
    #
    # source://jekyll-4.2.2/lib/jekyll.rb:163
    def sites; end
  end
end

# source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata.rb:16
module Jekyll::GitHubMetadata
  class << self
    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata.rb:57
    def client; end

    # Sets the attribute client
    #
    # @param value the value to set the attribute client to.
    #
    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata.rb:35
    def client=(_arg0); end

    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata.rb:41
    def environment; end

    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata.rb:49
    def log(severity, message); end

    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata.rb:45
    def logger; end

    # Sets the attribute logger
    #
    # @param value the value to set the attribute logger to.
    #
    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata.rb:35
    def logger=(_arg0); end

    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata.rb:61
    def repository; end

    # Returns the value of attribute repository_finder.
    #
    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata.rb:34
    def repository_finder; end

    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata.rb:72
    def reset!; end

    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata.rb:37
    def site; end

    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata.rb:67
    def site=(new_site); end
  end
end

# source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/client.rb:7
class Jekyll::GitHubMetadata::Client
  # @return [Client] a new instance of Client
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/client.rb:25
  def initialize(options = T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/client.rb:50
  def accepts_client_method?(method_name); end

  # @return [Boolean]
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/client.rb:100
  def authenticated?; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/client.rb:44
  def build_octokit_client(options = T.unsafe(nil)); end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/client.rb:36
  def default_octokit_options; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/client.rb:96
  def inspect; end

  # @return [Boolean]
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/client.rb:104
  def internet_connected?; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/client.rb:58
  def method_missing(method_name, *args, &block); end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/client.rb:29
  def safe_require(gem_name); end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/client.rb:80
  def save_from_errors(default = T.unsafe(nil)); end

  private

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/client.rb:147
  def cache; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/client.rb:143
  def cache_key(method, *args); end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/client.rb:121
  def client_inspect; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/client.rb:130
  def pluck_auth_method; end

  # @return [Boolean]
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/client.rb:54
  def respond_to_missing?(method_name, include_private = T.unsafe(nil)); end
end

# Whitelisted API calls.
#
# source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/client.rb:12
Jekyll::GitHubMetadata::Client::API_CALLS = T.let(T.unsafe(nil), Set)

# source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/client.rb:9
class Jekyll::GitHubMetadata::Client::BadCredentialsError < ::StandardError; end

# NOTE: Faraday's error classes has been promoted to under Faraday module from v1.0.0.
# This patch aims to prevent on locking specific version of Faraday.
#
# source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/client.rb:73
Jekyll::GitHubMetadata::Client::FARADAY_FAILED_CONNECTION = Faraday::Error::ConnectionFailed

# source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/client.rb:8
class Jekyll::GitHubMetadata::Client::InvalidMethodError < ::NoMethodError; end

# source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/edit-link-tag.rb:5
class Jekyll::GitHubMetadata::EditLinkTag < ::Liquid::Tag
  extend ::Forwardable

  # Returns the value of attribute context.
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/edit-link-tag.rb:6
  def context; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/edit-link-tag.rb:40
  def render(context); end

  private

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/edit-link-tag.rb:19
  def branch; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/edit-link-tag.rb:120
  def ensure_not_just_a_slash(part); end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/edit-link-tag.rb:116
  def ensure_trailing_slash(part); end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/edit-link-tag.rb:58
  def link; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/edit-link-tag.rb:51
  def link_text; end

  # Utility function for compatibility with Jekyll 4.0
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/edit-link-tag.rb:90
  def memoize_conditionally; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/edit-link-tag.rb:85
  def page; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/edit-link-tag.rb:19
  def page_path; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/edit-link-tag.rb:71
  def parts; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/edit-link-tag.rb:75
  def parts_normalized; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/edit-link-tag.rb:112
  def remove_leading_slash(part); end

  # Utility function to detect Jekyll 4.0
  #
  # @return [Boolean]
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/edit-link-tag.rb:104
  def renderer_cached?; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/edit-link-tag.rb:19
  def repository_url; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/edit-link-tag.rb:108
  def site; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/edit-link-tag.rb:19
  def site_github; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/edit-link-tag.rb:19
  def source; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/edit-link-tag.rb:19
  def source_path; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/edit-link-tag.rb:62
  def uri; end

  class << self
    # Defines an instance method that delegates to a hash's key
    #
    # hash_method -  a symbol representing the instance method to delegate to. The
    #                instance method should return a hash or respond to #[]
    # key         - the key to call within the hash
    # method      - (optional) the instance method the key should be aliased to.
    #               If not specified, defaults to the hash key
    # default     - (optional) value to return if value is nil (defaults to nil)
    #
    # Returns a symbol representing the instance method
    #
    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/edit-link-tag.rb:18
    def def_hash_delegator(hash_method, key, method, default = T.unsafe(nil)); end
  end
end

# source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/edit-link-tag.rb:30
Jekyll::GitHubMetadata::EditLinkTag::LINK_TEXT_REGEX = T.let(T.unsafe(nil), Regexp)

# source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/edit-link-tag.rb:29
Jekyll::GitHubMetadata::EditLinkTag::MISSING_DATA_MSG = T.let(T.unsafe(nil), String)

# source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/metadata_drop.rb:8
class Jekyll::GitHubMetadata::MetadataDrop < ::Jekyll::Drops::Drop
  extend ::Forwardable

  # source://RUBY_ROOT/forwardable.rb:229
  def api_url(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def archived(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def baseurl(*args, **_arg1, &block); end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/metadata_drop.rb:89
  def build_revision; end

  # source://RUBY_ROOT/forwardable.rb:229
  def clone_url(*args, **_arg1, &block); end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/metadata_drop.rb:28
  def content_methods; end

  # source://RUBY_ROOT/forwardable.rb:229
  def contributors(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def disabled(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def environment(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def help_url(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def hostname(*args, **_arg1, &block); end

  # See https://github.com/jekyll/jekyll/pull/6338
  #
  # source://jekyll-4.2.2/lib/jekyll/drops/drop.rb:124
  def invoke_drop(key); end

  # source://RUBY_ROOT/forwardable.rb:229
  def is_project_page(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def is_user_page(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def issues_url(*args, **_arg1, &block); end

  # @return [Boolean]
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/metadata_drop.rb:15
  def key?(key); end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/metadata_drop.rb:32
  def keys; end

  # source://RUBY_ROOT/forwardable.rb:229
  def language(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def latest_release(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def license(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def organization_members(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def owner(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def owner_display_name(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def owner_gravatar_url(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def owner_name(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def owner_url(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def pages_env(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def pages_hostname(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def private(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def project_tagline(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def project_title(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def public_repositories(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def releases(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def releases_url(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def repository_name(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def repository_nwo(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def repository_url(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def show_downloads(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def source(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def tar_url(*args, **_arg1, &block); end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/metadata_drop.rb:22
  def to_s; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/metadata_drop.rb:22
  def to_str; end

  # source://RUBY_ROOT/forwardable.rb:229
  def url(*args, **_arg1, &block); end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/metadata_drop.rb:78
  def versions; end

  # source://RUBY_ROOT/forwardable.rb:229
  def wiki_url(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def zip_url(*args, **_arg1, &block); end

  private

  # Nothing to see here.
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/metadata_drop.rb:98
  def fallback_data; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/metadata_drop.rb:102
  def mutations; end

  # source://RUBY_ROOT/forwardable.rb:229
  def repository(*args, **_arg1, &block); end
end

# source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata.rb:29
Jekyll::GitHubMetadata::NoRepositoryError = Jekyll::GitHubMetadata::RepositoryFinder::NoRepositoryError

# source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/owner.rb:5
class Jekyll::GitHubMetadata::Owner
  extend ::Forwardable

  # @return [Owner] a new instance of Owner
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/owner.rb:61
  def initialize(owner_login); end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/owner.rb:20
  def avatar_url; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/owner.rb:20
  def bio; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/owner.rb:20
  def blog; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/owner.rb:20
  def collaborators; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/owner.rb:20
  def company; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/owner.rb:20
  def created_at; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/owner.rb:20
  def description; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/owner.rb:20
  def email; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/owner.rb:20
  def followers; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/owner.rb:20
  def following; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/owner.rb:20
  def has_organization_projects; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/owner.rb:20
  def has_repository_projects; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/owner.rb:20
  def hireable; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/owner.rb:20
  def html_url; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/owner.rb:20
  def id; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/owner.rb:20
  def is_verified; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/owner.rb:20
  def location; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/owner.rb:20
  def login; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/owner.rb:20
  def name; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/owner.rb:20
  def node_id; end

  # Returns the value of attribute owner_login.
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/owner.rb:59
  def owner_login; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/owner.rb:20
  def public_gists; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/owner.rb:20
  def public_repos; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/owner.rb:65
  def to_h; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/owner.rb:65
  def to_hash; end

  # source://RUBY_ROOT/forwardable.rb:229
  def to_json(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def to_liquid(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def to_s(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def to_str(*args, **_arg1, &block); end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/owner.rb:20
  def type; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/owner.rb:20
  def updated_at; end

  private

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/owner.rb:78
  def owner_info; end

  class << self
    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/owner.rb:26
    def content_methods; end

    # Defines an instance method that delegates to a hash's key
    #
    # hash   - a symbol representing the instance method to delegate to. The
    #          instance method should return a hash or respond to #[]
    # key    - the key to call within the hash
    # method - (optional) the instance method the key should be aliased to.
    #          If not specified, defaults to the hash key
    #
    # Returns a symbol representing the instance method
    #
    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/owner.rb:17
    def def_hash_delegators(hash, *methods); end
  end
end

# source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/pages.rb:5
class Jekyll::GitHubMetadata::Pages
  class << self
    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/pages.rb:71
    def api_url; end

    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/pages.rb:93
    def configuration; end

    # @return [Boolean]
    #
    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/pages.rb:51
    def custom_domains_enabled?; end

    # @return [Boolean]
    #
    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/pages.rb:47
    def development?; end

    # @return [Boolean]
    #
    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/pages.rb:39
    def dotcom?; end

    # @return [Boolean]
    #
    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/pages.rb:43
    def enterprise?; end

    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/pages.rb:55
    def env; end

    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/pages.rb:79
    def github_hostname; end

    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/pages.rb:63
    def github_url; end

    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/pages.rb:75
    def help_url; end

    # @return [Boolean]
    #
    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/pages.rb:89
    def page_build?; end

    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/pages.rb:83
    def pages_hostname; end

    # @return [Boolean]
    #
    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/pages.rb:59
    def repo_pages_html_url_preview?; end

    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/pages.rb:27
    def scheme; end

    # Whether the GitHub instance supports HTTPS
    # Note: this will be the same as how sites are served in Enterprise,
    # but may be different from how sites are served on GitHub.com.
    # See Repository#url_scheme
    #
    # @return [Boolean]
    #
    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/pages.rb:23
    def ssl?; end

    # @return [Boolean]
    #
    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/pages.rb:31
    def subdomain_isolation?; end

    # @return [Boolean]
    #
    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/pages.rb:35
    def test?; end

    private

    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/pages.rb:101
    def env_var(key, intermediate_default = T.unsafe(nil)); end

    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/pages.rb:105
    def trim_last_slash(url); end
  end
end

# source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:5
class Jekyll::GitHubMetadata::Repository
  extend ::Forwardable

  # @return [Repository] a new instance of Repository
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:38
  def initialize(name_with_owner); end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:18
  def archived?; end

  # source://RUBY_ROOT/forwardable.rb:229
  def baseurl(*args, **_arg1, &block); end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:184
  def cname; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:135
  def contributors; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:174
  def default_user_domain; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:18
  def disabled?; end

  # source://RUBY_ROOT/forwardable.rb:229
  def domain(*args, **_arg1, &block); end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:206
  def forks_count; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:18
  def git_ref; end

  # @return [Boolean]
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:155
  def github_repo?; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:190
  def html_url; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:103
  def issues_url; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:18
  def language; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:143
  def latest_release; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:18
  def latest_release_url; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:18
  def license; end

  # Returns the value of attribute name.
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:6
  def name; end

  # Returns the value of attribute nwo.
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:6
  def nwo; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:129
  def organization_public_members; end

  # @return [Boolean]
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:111
  def organization_repository?; end

  # Returns the value of attribute owner.
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:6
  def owner; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:67
  def owner_display_name; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:79
  def owner_gravatar_url; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:71
  def owner_metadata; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:115
  def owner_public_repositories; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:75
  def owner_url; end

  # @return [Boolean]
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:159
  def primary?; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:18
  def private?; end

  # @return [Boolean]
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:151
  def project_page?; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:139
  def releases; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:99
  def releases_url; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:83
  def repo_clone_url; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:44
  def repo_compat; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:48
  def repo_info; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:55
  def repo_pages_info; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:59
  def repo_pages_info_opts; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:87
  def repository_url; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:18
  def show_downloads?; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:147
  def source; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:202
  def stargazers_count; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:18
  def tagline; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:95
  def tar_url; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:194
  def uri; end

  # source://RUBY_ROOT/forwardable.rb:229
  def url_scheme(*args, **_arg1, &block); end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:198
  def url_without_path; end

  # @return [Boolean]
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:159
  def user_page?; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:168
  def user_page_domains; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:107
  def wiki_url; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:91
  def zip_url; end

  private

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:212
  def memoize_value(var_name, value); end

  class << self
    # Defines an instance method that delegates to a hash's key
    #
    # hash   - a symbol representing the instance method to delegate to. The
    #          instance method should return a hash or respond to #[]
    # key    - the key to call within the hash
    # method - (optional) the instance method the key should be aliased to.
    #          If not specified, defaults to the hash key
    #
    # Returns a symbol representing the instance method
    #
    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository.rb:17
    def def_hash_delegator(hash, key, method); end
  end
end

# source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository_compat.rb:5
class Jekyll::GitHubMetadata::RepositoryCompat
  # @return [RepositoryCompat] a new instance of RepositoryCompat
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository_compat.rb:8
  def initialize(repo); end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository_compat.rb:48
  def domain; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository_compat.rb:37
  def html_url; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository_compat.rb:37
  def pages_url; end

  # Returns the value of attribute repo.
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository_compat.rb:6
  def repo; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository_compat.rb:61
  def source; end

  # In enterprise, the site's scheme will be the same as the instance's
  # In dotcom, this will be `https` for GitHub-owned sites that end with
  # `.github.com` and will be `http` for all other sites.
  # Note: This is not the same as *instance*'s scheme, which may differ
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository_compat.rb:16
  def url_scheme; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository_compat.rb:26
  def user_domain; end

  private

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository_compat.rb:70
  def enterprise_url; end
end

# source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository_finder.rb:5
class Jekyll::GitHubMetadata::RepositoryFinder
  # @return [RepositoryFinder] a new instance of RepositoryFinder
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository_finder.rb:9
  def initialize(site); end

  # Public: fetches the repository name with owner to fetch metadata for.
  # In order of precedence, this method uses:
  # 1. the environment variable $PAGES_REPO_NWO
  # 2. 'repository' variable in the site config
  # 3. the 'origin' git remote's URL
  #
  # site - the Jekyll::Site being processed
  #
  # Return the name with owner (e.g. 'parkr/my-repo') or raises an
  # error if one cannot be found.
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository_finder.rb:23
  def nwo; end

  # Returns the value of attribute site.
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository_finder.rb:8
  def site; end

  private

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository_finder.rb:56
  def git_remote_url; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository_finder.rb:48
  def git_remotes; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository_finder.rb:69
  def github_remote_regex; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository_finder.rb:43
  def nwo_from_config; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository_finder.rb:39
  def nwo_from_env; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository_finder.rb:62
  def nwo_from_git_origin_remote; end
end

# source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/repository_finder.rb:6
class Jekyll::GitHubMetadata::RepositoryFinder::NoRepositoryError < ::Jekyll::Errors::FatalException; end

# source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/sanitizer.rb:5
module Jekyll::GitHubMetadata::Sanitizer
  extend ::Jekyll::GitHubMetadata::Sanitizer

  # Sanitize an object.
  # When the resource is either `false`, `true`, `nil` or a number,
  #   it returns the resource as-is. When the resource is an array,
  #   it maps over the entire array, sanitizing each of its values.
  #   When the resource responds to the #to_hash method, it returns
  #   the value of #sanitize_resource (see below). If none of the
  #   aforementioned conditions are met, the return value of #to_s
  #   is used.
  #
  # resource - an Object
  #
  # Returns the sanitized resource.
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/sanitizer.rb:20
  def sanitize(resource); end

  # Sanitize the Sawyer Resource or Hash
  # Note: the object must respond to :to_hash for this to work.
  # Consider using #sanitize instead of this method directly.
  #
  # resource - an Object which responds to :to_hash
  #
  # Returns the sanitized sawyer resource or hash as a hash.
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/sanitizer.rb:53
  def sanitize_resource(resource); end
end

# source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/site_github_munger.rb:6
class Jekyll::GitHubMetadata::SiteGitHubMunger
  extend ::Forwardable

  # @return [SiteGitHubMunger] a new instance of SiteGitHubMunger
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/site_github_munger.rb:16
  def initialize(site); end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/site_github_munger.rb:27
  def inject_metadata!(payload); end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/site_github_munger.rb:20
  def munge!; end

  # source://RUBY_ROOT/forwardable.rb:229
  def site(*args, **_arg1, &block); end

  private

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/site_github_munger.rb:56
  def add_title_and_description_fallbacks!; end

  # Set `site.url` and `site.baseurl` if unset.
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/site_github_munger.rb:49
  def add_url_and_baseurl_fallbacks!; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/site_github_munger.rb:44
  def drop; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/site_github_munger.rb:33
  def github_namespace; end

  # source://RUBY_ROOT/forwardable.rb:229
  def repository(*args, **_arg1, &block); end

  # @return [Boolean]
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/site_github_munger.rb:80
  def should_add_url_fallbacks?; end

  # Set the baseurl only if it is `nil` or `/`
  # Baseurls should never be "/". See http://bit.ly/2s1Srid
  #
  # @return [Boolean]
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/site_github_munger.rb:76
  def should_set_baseurl?; end

  # @return [Boolean]
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/site_github_munger.rb:84
  def should_warn_about_site_name?; end

  class << self
    # Returns the value of attribute global_munger.
    #
    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/site_github_munger.rb:10
    def global_munger; end

    # Sets the attribute global_munger
    #
    # @param value the value to set the attribute global_munger to.
    #
    # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/site_github_munger.rb:10
    def global_munger=(_arg0); end
  end
end

# source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/version.rb:5
Jekyll::GitHubMetadata::VERSION = T.let(T.unsafe(nil), String)

# source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/value.rb:7
class Jekyll::GitHubMetadata::Value
  extend ::Forwardable

  # @return [Value] a new instance of Value
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/value.rb:13
  def initialize(*args); end

  # source://RUBY_ROOT/forwardable.rb:229
  def +(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def eql?(*args, **_arg1, &block); end

  # source://RUBY_ROOT/forwardable.rb:229
  def hash(*args, **_arg1, &block); end

  # Returns the value of attribute key.
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/value.rb:11
  def key; end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/value.rb:26
  def render; end

  # source://RUBY_ROOT/forwardable.rb:229
  def to_json(*args, **_arg1, &block); end

  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/value.rb:35
  def to_liquid; end

  # source://RUBY_ROOT/forwardable.rb:229
  def to_s(*args, **_arg1, &block); end

  # Returns the value of attribute value.
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/value.rb:11
  def value; end

  private

  # Calls the value Proc with the appropriate number of arguments
  # or returns the raw value if it's a literal
  #
  # source://jekyll-github-metadata-2.15.0/lib/jekyll-github-metadata/value.rb:48
  def call_or_value; end
end

# source://jekyll-4.2.2/lib/jekyll/version.rb:4
Jekyll::VERSION = T.let(T.unsafe(nil), String)
