# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `jekyll-titles-from-headings` gem.
# Please instead update this file by running `bin/tapioca gem jekyll-titles-from-headings`.

# source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/generator.rb:3
module JekyllTitlesFromHeadings; end

# source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/context.rb:4
class JekyllTitlesFromHeadings::Context
  # @return [Context] a new instance of Context
  #
  # source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/context.rb:7
  def initialize(site); end

  # source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/context.rb:11
  def registers; end

  # Returns the value of attribute site.
  #
  # source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/context.rb:5
  def site; end
end

# source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/filters.rb:4
class JekyllTitlesFromHeadings::Filters
  include ::Jekyll::Filters::URLFilters
  include ::Jekyll::Filters::GroupingFilters
  include ::Jekyll::Filters::DateFilters
  include ::Jekyll::Filters
  include ::Liquid::StandardFilters

  # @return [Filters] a new instance of Filters
  #
  # source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/filters.rb:8
  def initialize(site); end
end

# source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/generator.rb:4
class JekyllTitlesFromHeadings::Generator < ::Jekyll::Generator
  # @return [Generator] a new instance of Generator
  #
  # source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/generator.rb:31
  def initialize(site); end

  # source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/generator.rb:35
  def generate(site); end

  # @return [Boolean]
  #
  # source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/generator.rb:59
  def markdown?(document); end

  # source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/generator.rb:63
  def markdown_converter; end

  # @return [Boolean]
  #
  # source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/generator.rb:51
  def should_add_title?(document); end

  # Returns the value of attribute site.
  #
  # source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/generator.rb:5
  def site; end

  # Sets the attribute site
  #
  # @param value the value to set the attribute site to.
  #
  # source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/generator.rb:5
  def site=(_arg0); end

  # @return [Boolean]
  #
  # source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/generator.rb:55
  def title?(document); end

  # source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/generator.rb:67
  def title_for(document); end

  private

  # @return [Boolean]
  #
  # source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/generator.rb:108
  def collections?; end

  # @return [Boolean]
  #
  # source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/generator.rb:90
  def disabled?; end

  # source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/generator.rb:129
  def filters; end

  # Documents (posts and collection items) have their title inferred from the filename.
  # We want to override these titles, because they were not excplicitly set.
  #
  # @return [Boolean]
  #
  # source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/generator.rb:114
  def inferred_title?(document); end

  # source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/generator.rb:86
  def option(key); end

  # source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/generator.rb:80
  def strip_markup(string); end

  # source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/generator.rb:118
  def strip_title!(document); end

  # @return [Boolean]
  #
  # source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/generator.rb:94
  def strip_title?(document); end

  # source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/generator.rb:125
  def strip_title_excerpt!(document); end

  # @return [Boolean]
  #
  # source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/generator.rb:102
  def strip_title_excerpt?(document); end

  class << self
    # source://jekyll-4.2.2/lib/jekyll/plugin.rb:24
    def inherited(const_); end
  end
end

# source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/generator.rb:26
JekyllTitlesFromHeadings::Generator::COLLECTIONS_KEY = T.let(T.unsafe(nil), String)

# source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/generator.rb:23
JekyllTitlesFromHeadings::Generator::CONFIG_KEY = T.let(T.unsafe(nil), String)

# source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/generator.rb:16
JekyllTitlesFromHeadings::Generator::CONVERTER_CLASS = Jekyll::Converters::Markdown

# source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/generator.rb:24
JekyllTitlesFromHeadings::Generator::ENABLED_KEY = T.let(T.unsafe(nil), String)

# Regex to strip extra markup still present after markdownify
# (footnotes at the moment).
#
# source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/generator.rb:21
JekyllTitlesFromHeadings::Generator::EXTRA_MARKUP_REGEX = T.let(T.unsafe(nil), Regexp)

# source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/generator.rb:17
JekyllTitlesFromHeadings::Generator::STRIP_MARKUP_FILTERS = T.let(T.unsafe(nil), Array)

# source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/generator.rb:25
JekyllTitlesFromHeadings::Generator::STRIP_TITLE_KEY = T.let(T.unsafe(nil), String)

# source://jekyll-titles-from-headings-0.5.3/lib/jekyll-titles-from-headings/generator.rb:6
JekyllTitlesFromHeadings::Generator::TITLE_REGEX = T.let(T.unsafe(nil), Regexp)
